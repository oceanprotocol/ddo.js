{
  "name": "@oceanprotocol/ddo-js",
  "version": "0.1.2",
  "repository": "https://github.com/oceanprotocol/ddo.js.git",
  "author": "Ocean Protocol <devops@oceanprotocol.com>",
  "license": "Apache-2.0",
  "main": "./dist/ddo.module.js",
  "umd:main": "dist/ddo.umd.js",
  "module": "./dist/ddo.js",
  "type": "module",
  "export": {
    "require": "./dist/ddo.cjs",
    "import": "./dist/ddo.module.js"
  },
  "types": "./dist/types/index.d.ts",
  "source": "./src/index.ts",
  "scripts": {
    "lint": "eslint --ignore-path .gitignore --ext .ts,.tsx .",
    "lint:fix": "eslint --ignore-path .gitignore --ext .ts,.tsx . --fix",
    "build": "npm run clean && microbundle build --format modern,esm,cjs,umd --compress --tsconfig tsconfig.json",
    "buildesm": "npm run clean && microbundle build --format esm --compress --tsconfig tsconfig.json",
    "build:tsc": "tsc --sourceMap",
    "clean": "rm -rf ./dist/ ./doc/ ./.nyc_output",
    "mocha": "mocha --node-env=test --config .mocharc.json",
    "clean-tests": "rm -rf ./dist/test",
    "build-tests": "tsc --sourceMap --sourceRoot ./src/test --outDir ./dist",
    "test:unit": "npm run clean-tests && npm run build-tests && npm run mocha \"./dist/test/**/*.test.js\"",
    "release": "release-it --non-interactive"
  },
  "devDependencies": {
    "@types/chai": "^5.0.1",
    "@types/mocha": "^10.0.10",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "eslint": "^8.57.0",
    "eslint-config-oceanprotocol": "^2.0.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^4.2.1",
    "microbundle": "^0.15.1",
    "mocha": "^11.0.1",
    "prettier": "^2.7.1",
    "release-it": "^18.1.2",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "@rdfjs/formats-common": "^3.1.0",
    "@types/rdfjs__formats-common": "^3.1.5",
    "@zazuko/env-node": "^2.1.4",
    "chai": "^5.1.2",
    "ethers": "^5.7.2",
    "rdf-literal": "^2.0.0",
    "rdf-validate-shacl": "^0.5.6"
  },
  "release-it": {
    "hooks": {
      "after:bump": "npm run build"
    },
    "plugins": {},
    "git": {
      "tagName": "v${version}"
    },
    "github": {
      "release": true,
      "assets": [
        "dist/lib.json"
      ]
    },
    "npm": {
      "publish": false
    }
  }
}
