@prefix dash: <http://datashapes.org/dash#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://www.w3.org/ns/credentials/v2/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# Root shape for VerifiableCredential
schema:VerifiableCredentialShape
    sh:targetClass schema:VerifiableCredential ;
    sh:property [
        sh:path schema:id ;
        sh:datatype xsd:string ;
        sh:pattern "^did\\:ope\\:(.*)$" ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:maxLength 72 ;
        sh:minLength 72 ;
    ] ;
    sh:property [
        sh:path schema:type ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 8 ;
    ] ;
    sh:property [
        sh:path schema:credentialSubject ;
        sh:node schema:CredentialSubjectShape ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:issuer ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:version ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:additionalDdos ;
        sh:node schema:AdditionalDdosShape ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:proof ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:indexedMetadata ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:accessDetails ;
        sh:node schema:AccessDetailShape ;
        sh:maxCount 32 ;
    ] .

# Shape for CredentialSubject
schema:CredentialSubjectShape
    sh:targetClass schema:CredentialSubject ;
    sh:property [
        sh:path schema:metadata ;
        sh:node schema:MetadataShape ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:services ;
        sh:node schema:ServiceShape ;
        sh:minCount 1 ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:credentials ;
        sh:node schema:CredentialsShape ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:chainId ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:nftAddress ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:minLength 42 ;
        sh:maxLength 42 ;
    ] ;
    sh:property [
        sh:path schema:stats ;
        sh:node schema:StatsShape ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:datatokens ;
        sh:node schema:DatatokenShape ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:event ;
        sh:node schema:EventShape ;
        sh:maxCount 1 ;
    ] .

# Shape for Metadata
schema:MetadataShape
    sh:property [
        sh:path schema:created;
        sh:datatype xsd:string;
#       sh:pattern "^[0-9]{4}-((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])|(0[469]|11)-(0[1-9]|[12][0-9]|30)|(02)-(0[1-9]|[12][0-9]))T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|[1-5][0-9]):(0[0-9]|[1-5][0-9])(\.[0-9]{3})?Z$" ;
        sh:minCount 1;
        sh:maxCount 1;
    ] ;
    sh:property [
        sh:path schema:updated;
        sh:datatype xsd:string;
#       sh:pattern "^[0-9]{4}-((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01])|(0[469]|11)-(0[1-9]|[12][0-9]|30)|(02)-(0[1-9]|[12][0-9]))T(0[0-9]|1[0-9]|2[0-3]):(0[0-9]|[1-5][0-9]):(0[0-9]|[1-5][0-9])(\.[0-9]{3})?Z$" ;
        sh:minCount 1;
        sh:maxCount 1;
    ] ;
    sh:property [
        sh:path schema:name ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:tags ; 
        sh:datatype xsd:string ; 
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:author ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:license ; 
        sh:node schema:LicenseShape ; 
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:links ; 
        sh:nodeKind sh:BlankNodeOrIRI ; 
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:providedBy ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:copyrightHolder ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:providedBy ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:tags ;
        sh:datatype xsd:string ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:additionalInformation ;
        sh:nodeKind sh:BlankNodeOrIRI ;
    ] .

# Shape for Services
schema:ServiceShape
    sh:property [
        sh:path schema:id ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:type ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:datatokenAddress ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:serviceEndpoint ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:timeout ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [ 
        sh:path schema:files ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 
    ] ;
    sh:property [ 
        sh:path schema:name ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 
    ] ;
    sh:property [ 
        sh:path schema:state ; 
        sh:datatype xsd:integer ; 
        sh:maxCount 1 
    ] ;
    sh:property [ 
        sh:path schema:credentials ; 
        sh:node schema:CredentialsShape ; 
        sh:maxCount 1 
    ] .

# Root credentials container
schema:CredentialsShape
    sh:property [
        sh:path schema:match_allow ;
        sh:in ( "any" "all" ) ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:match_deny ;
        sh:in ( "any" "all" ) ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:allow ;
        sh:node schema:CredentialRuleShape ;
        sh:maxCount 64 ;
    ] ;
    sh:property [
        sh:path schema:deny ;
        sh:node schema:CredentialRuleShape ;
        sh:maxCount 64 ;
    ] .

schema:CredentialRuleShape
    sh:or (
        schema:CredentialAddressBasedShape
        schema:CredentialPolicyBasedShape
    ) .

schema:CredentialAddressBasedShape
    sh:property [ 
        sh:path schema:type ; 
        sh:hasValue "address" ;
        sh:minCount 1 ; 
        sh:maxCount 1 
    ] ;
    sh:property [
        sh:path schema:values ;
        sh:or (
            [ sh:datatype xsd:string ]
            [ sh:node schema:AddressWrapperShape ]
        ) ;
        sh:minCount 1 ; 
        sh:maxCount 256 ;
    ] .

schema:AddressWrapperShape
    sh:property [ 
        sh:path schema:address ; 
        sh:datatype xsd:string ; 
        sh:minCount 1 ; 
        sh:maxCount 1 
    ] .

# verifiableCredential-based
schema:CredentialPolicyBasedShape
    sh:property [ 
        sh:path schema:type ; 
        sh:hasValue "verifiableCredential" ; 
        sh:minCount 1 ; 
        sh:maxCount 1 
    ] ;
    sh:property [
        sh:path schema:requestCredentials ;
        sh:node schema:RequestCredentialShape ;
        sh:minCount 1 ; sh:maxCount 32 ;
    ] .

schema:RequestCredentialShape
    sh:or (
        [ sh:datatype xsd:string ]
        schema:DetailedCredentialShape
    ) .

schema:DetailedCredentialShape
    sh:property [ 
        sh:path schema:credential ; 
        sh:datatype xsd:string ; 
        sh:maxCount 1 
    ] ;
    sh:property [
        sh:path schema:policies ;
        sh:node schema:PolicyShape ;
        sh:maxCount 32 ;
    ] .

schema:PolicyShape
    sh:or (
        [ sh:datatype xsd:string ]
        schema:PolicyDetailShape
    ) .

schema:PolicyDetailShape
    sh:property [ 
        sh:path schema:policy ; 
        sh:datatype xsd:string ; 
        sh:minCount 1 ; 
        sh:maxCount 1 
    ] ;
    sh:property [ 
        sh:path schema:args ; 
        sh:node schema:PolicyArgsShape ; 
        sh:maxCount 1 
    ] .

schema:PolicyArgsShape
    sh:property [ 
        sh:path schema:type ; 
        sh:datatype xsd:string ; 
        sh:minCount 1 ; 
        sh:maxCount 1 
    ] .

# Shape for Event
schema:EventShape
    sh:property [
        sh:path schema:txid ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:block ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:from ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:contract ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:datetime ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] .

# Shape for AdditionalDdos
schema:AdditionalDdosShape
    sh:property [
        sh:path schema:type ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:data ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shape for License
schema:LicenseShape
    sh:property [
        sh:path schema:name ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:licenseDocuments ;
        sh:node schema:LicenseDocumentShape ;
        sh:minCount 0 ;
        sh:maxCount 64 ;
    ] .

# Shape for LicenseDocument
schema:LicenseDocumentShape
    sh:property [
        sh:path schema:name ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:fileType ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:sha256 ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:mirrors ;
        sh:node schema:MirrorShape ;
        sh:maxCount 16 ;
    ] .

# Shape for Mirror
schema:MirrorShape
    sh:property [
        sh:path schema:type ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:method ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:url ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shape for Stats
schema:StatsShape
    sh:property [
        sh:path schema:allocated ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:orders ;
        sh:datatype xsd:integer ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:price ;
        sh:node schema:PriceShape ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shape for Price
schema:PriceShape
    sh:property [
        sh:path schema:value ;
        sh:datatype xsd:decimal ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:tokenSymbol ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:tokenAddress ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shape for Datatoken
schema:DatatokenShape
    sh:property [
        sh:path schema:address ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:name ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:symbol ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:serviceId ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] .

# Shape for AccessDetail
schema:AccessDetailShape
    sh:property [
        sh:path schema:type ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:price ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:addressOrId ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:baseToken ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:datatoken ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:paymentCollector ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:templateId ;
        sh:datatype xsd:integer ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:isOwned ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:validOrderTx ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:isPurchasable ;
        sh:datatype xsd:boolean ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
        sh:path schema:publisherMarketOrderFee ;
        sh:datatype xsd:string ;
        sh:maxCount 1 ;
    ] .
